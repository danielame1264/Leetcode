/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null) return;
        ArrayList<TreeLinkNode> currentLevel = new ArrayList<TreeLinkNode>();
        currentLevel.add(root);
        int cur=0;
        int remaining=1;
        ArrayList<TreeLinkNode> nextLevel = new ArrayList<TreeLinkNode>();
        while(currentLevel.size()!=0){
            TreeLinkNode tmp = currentLevel.remove(0);
            remaining--;
            if(tmp.left!=null) {
                nextLevel.add(tmp.left);
                cur++;
            }
            if(tmp.right!=null){
                nextLevel.add(tmp.right);
                cur++;
            } 
            
            if(remaining==0){
                remaining=cur;
                cur=0;
                
                if(nextLevel.size()!=0){
                for(int i=0;i<nextLevel.size()-1;i++){
                    nextLevel.get(i).next=nextLevel.get(i+1);
                }
                nextLevel.get(nextLevel.size()-1).next=null;
                }
                currentLevel = nextLevel;
                nextLevel = new ArrayList<TreeLinkNode>(); 
                
            }
            
        }
        
    }
}
