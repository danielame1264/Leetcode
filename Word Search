public class Solution {
    boolean[][] visited;
    public boolean exist(char[][] board, String word) {
        
        int width = board.length;
        int length = board[0].length;
        visited = new boolean[width][length];
        
        for(int i=0;i<width;i++){
            for(int j=0;j<length;j++){
                
                    if(helper(board,word,0,i,j)) return true; 
                
            }
        }
        return false;
    }
    
    public boolean helper(char[][] board, String word, int index , int i, int j){
        boolean success;
        if(index==word.length()) return true;
        if(i<0 || i>=board.length || j<0 || j>=board[0].length) return false;
        if(visited[i][j]) return false;
        
        
        if( board[i][j]!= word.charAt(index) ) return false;

        visited[i][j]= true;
        success = helper(board,word,index+1,i+1,j) || helper(board,word,index+1,i,j+1) || helper(board,word,index+1,i-1,j) || helper(board,word,index+1,i,j-1);
        visited[i][j] = false;
        return success;
        
        
        
    }
}
