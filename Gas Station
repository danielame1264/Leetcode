class Solution {
public:
    int canCompleteCircuit(vector<int> &gas, vector<int> &cost) {
        vector<int> diff(gas.size());
        
        for(int i=0;i<gas.size();i++){
            diff[i] = gas[i]-cost[i];
        }
        
        int gasLeft=0;
        int sum=0;
        int start=0;
        for(int i=0;i<gas.size();i++){
            gasLeft+=diff[i];
            sum+=diff[i];
            if(sum<0){
                start=i+1;
                sum=0;
            }
        }
        if(gasLeft<0){
            return -1;
        }
        else{
            return start;
        }
    }
};


class Solution(object):
    def canCompleteCircuit(self, gas, cost):
        """
        :type gas: List[int]
        :type cost: List[int]
        :rtype: int
        """
        diff = []
        N = len(gas)
        for i in range(N):
            diff.append(gas[i]-cost[i])
        start = 0
        sum = 0
        gasLeft = 0
        for i in range(N):
            sum += diff[i]
            gasLeft += diff[i]
            if sum<0:
                start = i+1
                sum = 0
        
        if gasLeft<0:
             return -1
        else: return start
                
        
