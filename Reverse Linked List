# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        # recursion, return the tail 
        if not head or not head.next: return head
        second = head.next
        head.next = None
        tail = self.reverseList(second)
        second.next = head
        return tail
    
    def reverseList2(self, head):
        prev = None
        while head:
            temp = head.next
            
            head.next = prev
            prev = head
            head = temp
        
        return prev 


def recursion(self, prev, head):
        if not head return prev
        
        next = recursion(head, head.next)
        head.next = prev;
        return next
