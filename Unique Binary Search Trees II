// too abstract for me, learnt from a blog

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; left = null; right = null; }
 * }
 */
public class Solution {
    public List<TreeNode> generateTrees(int n) {
    
        return dfs(1,n);
        
    }
    
    ArrayList<TreeNode> dfs(int start, int end){
        ArrayList<TreeNode> result = new ArrayList<TreeNode>();
        
        if(start>end){
            result.add(null);
            return result;
        }
        
        for(int i = start;i<=end;i++){
            ArrayList<TreeNode> lefts = dfs(start,i-1);
            ArrayList<TreeNode> rights = dfs(i+1,end);
            
            for(TreeNode left:lefts){
                for(TreeNode right:rights){
                    TreeNode cur = new TreeNode(i);
                    cur.left=left;
                    cur.right=right;
                    result.add(cur);
                }
            }
            
        }
        return result;
        
    }
}
