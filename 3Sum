public class Solution {
    public List<List<Integer>> threeSum(int[] num) {
        ArrayList<List<Integer>> result = new ArrayList<List<Integer>>();
        Arrays.sort(num);
        for(int i=0;(i<num.length-2) && num[i]<=0 ;i++){
           // if(i==0 && num[i]==num[i++] && num.length>3) continue; // to prevent first two element in the array are the same
            if( i==0 || num[i]>num[i-1]){ // not the way I like to rule out  first two elelments in the array are the same situation
            int target = 0-num[i];
            int start = i+1;
            int end= num.length-1;
            
            while(start<end){
                
                if((num[start]+num[end])<target){
                    start++;
                    
                }
                
                else if((num[start]+num[end])>target){
                    end--;
                    
                }
                
                else{
                    result.add(new ArrayList<Integer>(Arrays.asList(num[i],num[start],num[end])));
                    start++;
                    end--;
                    
                    //avoid duplicates
                    while(start<end && num[end]==num[end+1]){
                        end--;
                    }
                    
                    while(start<end && num[start]==num[start-1]){
                        start++;
                    }
                           
                }                
                
            }
            }
        }
    return result;
    }
}


class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        nums.sort()
        res = []
        for i in range(len(nums)-2):
            j=i+1
            k = len(nums)-1
            if i!=0 and nums[i]==nums[i-1]: continue
            while j<k:
                if nums[i]+nums[j]+nums[k]==0:
                    res.append([nums[i], nums[j], nums[k]])
                    j+=1
                    k-=1
                    while j<k and nums[j]==nums[j-1]:
                        j+=1
                    while k>j and nums[k]==nums[k+1]:
                        k-=1
                elif nums[i]+nums[j]+nums[k]<0:
                    j+=1
                else:
                    k-=1
        return res
