public class Solution {
    public int strStr(String haystack, String needle) {
        if(needle.length()==0 && haystack.length()==0) return 0;
        int needleLen = needle.length();
        
        for(int i=0;i<=haystack.length()-needleLen;i++){
            if(needle.equals(haystack.substring(i,i+needleLen))){
                return i;
            }
        }
        return -1;
    }
}


class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if not needle: return 0
        needleLen = len(needle)
        hayLen = len(haystack)
        if hayLen<needleLen: return -1
        for i in range(0, hayLen-needleLen+1):
            if needle == haystack[i:i+needleLen]: return i
        return -1



There is KMP algo there. Check that out if possible.
