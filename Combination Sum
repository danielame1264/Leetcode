class Solution {
public:
    vector<vector<int> > combinationSum(vector<int> &candidates, int target) {
        sort(candidates.begin(), candidates.end());
        vector<int> tmp;
        vector<vector<int> > res;
        int sum=0;
        int start=0;
        helper(candidates,tmp,res,target,start,sum);
        return res;
        
    }
    
    void helper(vector<int> &candidates, vector<int> &tmp, vector<vector<int> > &res, int target, int start, int &sum){
        if(sum>target) return;
                  
                if(sum==target){
                    res.push_back(tmp);
                }
                
            for(int i=start;i!=candidates.size();i++){
                sum+=candidates[i];
                tmp.push_back(candidates[i]);

                helper(candidates, tmp, res, target, i, sum);
                
                sum-=candidates[i];
                tmp.pop_back();
                
                
            }
        
    }
};



public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> solution = new ArrayList<Integer>();
        Arrays.sort(candidates);
        helper(0,candidates,target,solution,res);
        return res;
    }
    
    public void helper(int position,int[] candidates, int target, List<Integer> solution, List<List<Integer>> res){
        
        if(target==0){
            res.add(new ArrayList<Integer>(solution));
            return;
        }
        for(int i=position;i<candidates.length;i++){
            
            if(candidates[i]>target){
                return;
            }
            
            solution.add(candidates[i]);
            helper(i,candidates,target-candidates[i],solution,res);
            solution.remove(solution.size()-1);
        }
    }
    
    // public void sum(List<Integer> solution){
    //     int sum=0;
    //     for(Integer i ï¼š solution){
    //         sum+=i;
    //     }
    //     return sum;
    // }
}
