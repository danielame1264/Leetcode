public class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        public ArrayList<Integer> spiralOrder(int[][] matrix) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<Integer> result=new ArrayList<Integer> ();
        
        if (matrix==null|| matrix.length==0){
            return result;
        }
        
        int beginX=0;
        int endX=matrix[0].length-1;
        
        int beginY=0;
        int endY=matrix.length-1;
        
        while(true){
            for (int col=beginX; col<=endX; col++){
                result.add(matrix[beginY][col]);
            }
            if (++beginY>endY){
                break;
            }
            
            for (int row=beginY; row<=endY; row++){
                result.add(matrix[row][endX]);
            }
            if (--endX<beginX){
                break;
            }
            for (int col=endX; col>=beginX; col--){
                result.add(matrix[endY][col]);
            }
            if (--endY<beginY){
                break;
            }
            for (int row=endY; row>=beginY; row--){
                result.add(matrix[row][beginX]);
            }
            if (++beginX>endX){
                break;
            }
        }
        return result;
    }
}



class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        if not matrix: return matrix
        up = 0
        left = 0
        right = len(matrix[0])-1
        down = len(matrix)-1
        direction = 0 # 0 for right, 1 for down, 2 for left, 3 for up
        res = []
        while True:
            if direction==0:
                for i in range(left, right+1):
                    res.append(matrix[up][i])
                up+=1
            if direction==1:
                for i in range(up, down+1):
                    res.append(matrix[i][right])
                right-=1
            if direction==2:
                for i in range(right, left-1, -1):
                    res.append(matrix[down][i])
                down-=1
            if direction==3:
                for i in range(down, up-1, -1):
                    res.append(matrix[i][left])
                left+=1
            if left>right or up>down: return res
            direction = (direction+1)%4
                    
