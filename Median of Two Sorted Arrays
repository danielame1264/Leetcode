"""
This is a general case to find Kth element in two sorted array
Only to find meidan, you can chunk array B as well.
"""

class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        if (len(nums1) + len(nums2)) % 2 == 0:
            return (self.fms(nums1, nums2, (len(nums1) + len(nums2))/2) + self.fms(nums1, nums2, (len(nums1) + len(nums2))/2 + 1))/2.0
        else:
            return self.fms(nums1, nums2, (len(nums1) + len(nums2))/2 + 1)
    
    def fms(self, A, B, k):
        if len(A) > len(B):
            return self.fms(B, A, k)
        else:
            if len(A) == 0:
                return B[k-1]
            if k == 1:
                return min(A[0], B[0])
            pa = min(k/2, len(A))
            pb = k - pa
            if A[pa-1] <= B[pb-1]:
                return self.fms(A[pa::], B, k-pa)
            else:
                return self.fms(A, B[pb::], k-pb)
        
