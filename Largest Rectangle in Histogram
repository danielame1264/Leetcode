public class Solution {
    public int largestRectangleArea(int[] height) {
        int[] h = new int[height.length+1];
        for(int i=0;i<height.length;i++){
            h[i] = height[i];
        }
        h[h.length-1] = 0;
        
        int max = 0;
        Stack<Integer> S = new Stack<Integer>();
        for(int i=0;i<h.length;i++){
            if(S.empty()|| h[i]>h[S.peek()]){
                S.push(i);
            } else {
                int tmpIndex = S.pop();
                max = Math.max(max,h[tmpIndex]*(S.empty()?i:i-S.peek()-1));
                i--;
            }
            
        }
        return max;
    }
}


class Solution(object):
    def largestRectangleArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        stack = []
        area = 0
        i = 0
        height.append(0)
        
        while i<len(height):
            if not stack or height[i]>height[stack[-1]]:
                stack.append(i)
                i+=1
            else:
                cur_index = stack.pop()
                width = i if not stack else i-1-stack[-1]
                area = max(area, width*height[cur_index])
        return area
