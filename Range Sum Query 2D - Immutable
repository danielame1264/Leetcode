class NumMatrix(object):
    def __init__(self, matrix):
        """
        initialize your data structure here.
        :type matrix: List[List[int]]
        """
        if len(matrix)==0 or len(matrix[0])==0:
            self.sum_matrix = [[0]]
        else:
            self.sum_matrix = [[0]*(len(matrix[0])+1) for x in range(len(matrix)+1)]
        
        for i in range(len(matrix)):
            row_sum = 0
            for j in range(len(matrix[0])):
                row_sum+=matrix[i][j]
                self.sum_matrix[i+1][j+1] = row_sum+self.sum_matrix[i][j+1] 
                

    def sumRegion(self, row1, col1, row2, col2):
        """
        sum of elements matrix[(row1,col1)..(row2,col2)], inclusive.
        :type row1: int
        :type col1: int
        :type row2: int
        :type col2: int
        :rtype: int
        """
        return self.sum_matrix[row2+1][col2+1]+self.sum_matrix[row1][col1] - self.sum_matrix[row2+1][col1]-self.sum_matrix[row1][col2+1]
        


# Your NumMatrix object will be instantiated and called as such:
# numMatrix = NumMatrix(matrix)
# numMatrix.sumRegion(0, 1, 2, 3)
# numMatrix.sumRegion(1, 2, 3, 4)
